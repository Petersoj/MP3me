plugins {
    id "java"
    id "application"
    id "org.javamodularity.moduleplugin" version "1.6.0" // For Java 9 modularity integration with Gradle
    id "org.beryx.jlink" version "2.17.1" // For creating a distributable image (so users don"t have to install Java)
}

enum OS {
    MAC,
    WINDOWS,
    LINUX,
    UNKNOWN
}

def os = OS.UNKNOWN
def osName = System.getProperty("os.name").toLowerCase()
if (osName.contains("mac")) {
    os = OS.MAC
} else if (osName.contains("windows")) {
    os = OS.WINDOWS
} else if (osName.contains("linux")) {
    os = OS.LINUX
}

group "net.jacobpeterson"
version "1.0-SNAPSHOT"

sourceCompatibility = 11 // Use JDK 11

repositories {
    flatDir {
        dirs "lib"
    }

    mavenCentral()
}

dependencies {
    implementation group: "com.google.code.gson", name: "gson", version: "2.8.5"

    switch (os) {
        case OS.MAC:
            implementation name: "swt-4.15M1-cocoa-macosx-x86_64"
            break
        case OS.WINDOWS:
            implementation name: "swt-4.15M1-win32-win32-x86_64"
            break
        case OS.LINUX:
            implementation name: "swt-4.15M1-gtk-linux-x86_64"
            break
        case OS.UNKNOWN:
            throw new IllegalStateException("Cannot build with: " + osName)
            break
    }
}

mainClassName = "$moduleName/net.jacobpeterson.MP3me"
applicationDefaultJvmArgs = ["-XstartOnFirstThread"]

jlink {
    options.addAll("--strip-debug", "--no-header-files", "--no-man-pages")
    launcher {
        name = "MP3me"
        jvmArgs = ["-XstartOnFirstThread"]
    }

    jpackage {
        // $JAVA_HOME must be set to the JDK 1 home on your machine
        jpackageHome = "/Library/Java/JavaVirtualMachines/jdk-14.jdk/Contents/Home"
        skipInstaller = true
        imageName = "MP3me"
        imageOptions = ["--icon", projectDir.getAbsolutePath() + "/assets/Logo.icns"]
    }
}

