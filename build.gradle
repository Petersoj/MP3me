plugins {
    id "java"
    id "application"

    // For Java 9 modularity integration with Gradle
    id "org.javamodularity.moduleplugin" version "1.6.0"

    // For creating a distributable image/app (so users don't have to install Java)
    id "org.beryx.jlink" version "2.17.1"
}

String SWTLibraryName
String iconPath
File appImageOutputDir
boolean needStartOnFirstThread = false
boolean skipJpackageInstaller = true

String osName = System.getProperty("os.name").toLowerCase()
if (osName.contains("mac")) {
    SWTLibraryName = "swt-4.15M1-cocoa-macosx-x86_64"
    iconPath = "assets/Logo.icns"
    appImageOutputDir = new File(buildDir, "jpackage/mac")
    needStartOnFirstThread = true
} else if (osName.contains("windows")) {
    SWTLibraryName = "swt-4.15M1-win32-win32-x86_64"
    iconPath = "assets/Logo.ico"
    appImageOutputDir = new File(buildDir, "jpackage/windows")
    skipJpackageInstaller = false
} else if (osName.contains("linux")) {
    SWTLibraryName = "swt-4.15M1-gtk-linux-x86_64"
    iconPath = "assets/Logo.png"
    appImageOutputDir = new File(buildDir, "jpackage/linux")
} else {
    throw new IllegalStateException("Cannot build with: " + osName)
}

group "net.jacobpeterson"
version "1.0-SNAPSHOT"

sourceCompatibility = 11 // Use JDK 11

repositories {
    flatDir {
        dirs "lib"
    }

    mavenCentral()
}

dependencies {
    implementation group: "com.google.code.gson", name: "gson", version: "2.8.5"
    implementation name: SWTLibraryName
}

mainClassName = "$moduleName/net.jacobpeterson.MP3me"

if (needStartOnFirstThread) {
    applicationDefaultJvmArgs = ["-XstartOnFirstThread"]
}

jlink {
    options.addAll("--strip-debug", "--no-header-files", "--no-man-pages")

    launcher {
        name = "MP3me"

        if (needStartOnFirstThread) {
            jvmArgs = ["-XstartOnFirstThread"]
        }
    }

    jpackage {
        // Make sure Java 14 is being used or the home for it is set. This is for the use of jpackage.
        String javaVersionString = System.getProperty("java.version")
        int javaMajorVersion = Integer.valueOf(javaVersionString.substring(0, javaVersionString.indexOf(".")))
        String java14Home = System.getenv("JAVA_HOME_14")
        if (javaMajorVersion >= 14) {
            logger.info("Using current Java version for jpackage: " + javaVersionString)
            java14Home = System.getProperty("java.home")
        } else if (java14Home == null || java14Home.isEmpty()) {
            logger.log(LogLevel.WARN, "You must set the JAVA_HOME_14 environment variable or " +
                    "install JDK 14 to use jpackage.")
        } else {
            logger.info("Using JAVA_HOME_14 environment variable for jpackage: " + java14Home)
        }

        jpackageHome = java14Home
        skipInstaller = skipJpackageInstaller
        imageName = "MP3me"
        description = "Download Youtube, Soundcloud, and others as a song (add album cover image, artist name, and more)."
        imageOutputDir = appImageOutputDir
        imageOptions = ["--icon", new File(projectDir.getAbsolutePath(), iconPath).getAbsolutePath()]
    }
}

